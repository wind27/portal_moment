<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wind.entity.Moment">
	<resultMap id="momentMap" type="com.wind.entity.Moment">
		<id column="id" property="id" jdbcType="BIGINT" />
	 	<result column="title" property="title" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
		<result column="uid" property="uid" jdbcType="BIGINT" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="update_time" property="updateTime" jdbcType="BIGINT" />
		<result column="publish_time" property="publishTime" jdbcType="BIGINT" />
		<result column="praise_uid" property="praiseUid" jdbcType="VARCHAR" />
		<result column="collection_uid" property="collectionUid" jdbcType="VARCHAR" />
		<result column="view_num" property="viewNum" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
	</resultMap>

	<insert id="insert" parameterType="com.wind.entity.Moment"
		useGeneratedKeys="true" keyProperty="id">
		insert into moment (
			title, 				content, 			uid, 			create_time, 
			update_time, 		publish_time, 		praise_uid, 	collection_uid, 
			status,				view_num
		) 
  		values (
  			#{title},			#{content},			#{uid},			#{createTime},
  			#{updateTime},		#{publishTime},		#{praiseUid},	#{collectionUid},
  			#{status},			viewNum
  		)
	</insert>

	<update id="update" parameterType="com.wind.entity.Moment">
		update moment 
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime},
			</if>
			<if test="praiseUid != null">
				praise_uid = #{praise_uid},
			</if>
			<if test="collectionUid != null">
				collection_uid = #{collectionUid},
			</if>
			<if test="viewNum != null">
				view_num = #{viewNum},
			</if>
		</set>
		where id = #{id}
	</update>
	
	<update id="updateByParams" parameterType="map">
		update moment 
		<set>
			<if test="title != null">
				title = #{title},
			</if>
			<if test="content != null">
				content = #{content},
			</if>
			<if test="status != null">
				status = #{status},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime},
			</if>
			<if test="publishTime != null">
				publish_time = #{publishTime},
			</if>
			<if test="praiseUid != null">
				praise_uid = #{praise_uid},
			</if>
			<if test="collectionUid != null">
				collection_uid = #{collectionUid},
			</if>
			<if test="viewNum != null">
				view_num = #{viewNum},
			</if>
		</set>
		where id = #{id}
	</update>
 
	<select id="findById" parameterType="long" resultMap="momentMap">
		 select 
		 	id,					title, 				content, 			uid, 			
		 	create_time, 		update_time, 		publish_time, 		praise_uid, 	
		 	collection_uid, 	status,				view_num
		 from 
		 	moment 
	 	where id = #{id}
	</select>

	<select id="findByParam" parameterType="map" resultMap="momentMap">
		select 
			id,					title, 				content, 			uid, 			
		 	create_time, 		update_time, 		publish_time, 		praise_uid, 	
		 	collection_uid, 	status,				view_num
	 	from 
	 		moment 
		<where>
			<if test="uids != null">
				id in
				<foreach collection="uids" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
			</if>
		</where>
	</select>
	
	<select id="findPageList" parameterType="map" resultMap="momentMap">
		select 
			id,					title, 				content, 			uid, 			
		 	create_time, 		update_time, 		publish_time, 		praise_uid, 	
		 	collection_uid, 	status,				view_num
	 	from 
	 		moment 
		<where>
			<if test="uids != null">
				id in
				<foreach collection="uids" item="item" index="index" open="(" separator="," close=")">#{item}</foreach>
			</if>
		</where>
	</select>
</mapper>
